name: Rust

on:
  push:
    branches:
      - master

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build Napture (Ubuntu)
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v4
    - name: Install Dependencies
      run: |
        echo "Installing dependencies..."
        sudo apt-get update
        sudo apt-get install -y libglib2.0-dev libcairo2-dev libgraphene-1.0-dev libgtk-4-dev libadwaita-1-dev 
        sudo add-apt-repository universe
        sudo apt install libfuse2
        echo "Dependencies installed."

    - name: Build Napture
      run: |
        echo "Building Napture..."
        cd napture
        export PKG_CONFIG_PATH=/usr/lib/pkgconfig
        cargo build --release
        echo "Napture built successfully."
    - name: Install AppImageTool
      run: |
        echo "Starting artifact upload phase..."
        echo "Installing AppImageTool..."
        wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
        chmod +x appimagetool-x86_64.AppImage
        echo "AppImageTool installed."
    - name: Create Napture AppImage
      run: |
        echo "Creating Napture AppImage..."
        cd napture
        mkdir -p AppDir/usr/bin
        cp target/release/webx AppDir/usr/bin/
        cp io.github.face_hh.Napture.desktop AppDir/
        cp io.github.face_hh.Napture.svg AppDir/
        ARCH=x86_64
         ../appimagetool-x86_64.AppImage AppDir
        mv Napture-x86_64.AppImage ../Bussin.Napture-x86_64.AppImage
        echo "AppImage created successfully."
    - name: Rename AppImage
      run: |
        echo "Renaming AppImage..."
        mv Bussin.Napture-x86_64.AppImage napture-v${{ github.sha }}.AppImage
        echo "AppImage renamed successfully."

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: napture-v${{ github.sha }}.AppImage
        path: napture-v${{ github.sha }}.AppImage
      env:
        UPLOAD_URL: ${{ steps.upload.outputs.upload_url }}  
        
  build_win:
    name: Build Napture (Windows)
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v4
    - name: Install Dependencies
      run: |
        echo "Installing dependencies..."
        sudo apt-get update
        sudo apt-get install -y libglib2.0-dev libcairo2-dev libgraphene-1.0-dev libgtk-4-dev libadwaita-1-dev 
        sudo add-apt-repository universe
        sudo apt install libfuse2
        sudo dpkg --add-architecture i386
        sudo apt-get update
        sudo apt-get install -y wine-stable innoextract
        echo "Dependencies installed."

    - name: Build Napture
      run: |
        echo "Building Napture..."
        cd napture
        export PKG_CONFIG_PATH=/usr/lib/pkgconfig
        cargo build --release
        echo "Napture built successfully."
        
    - name: Install Inno Setup
      run: |
        echo "Installing Inno Setup..."
        wget "https://jrsoftware.org/download.php/is.exe" -O is.exe
        wine is.exe /VERYSILENT /NORESTART
        echo "Inno Setup installed."
        
    - name: Create Installer
      run: |
        echo "Creating Installer..."
        cd installer
        wine "C:\\Program Files\\Inno Setup 6\\ISCC.exe" setup.iss
        echo "Installer created successfully."
  
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: NaptureInstaller.exe
        path: installer/setup.exe
      env:
          UPLOAD_URL: ${{ steps.upload.outputs.upload_url }} 
  upload:
   name: "Upload Release"
   runs-on: ubuntu-24.04
   needs:
      - build
      - build_win
   steps:
      - name: Download Ubuntu Artifact
        uses: actions/download-artifact@v4.1.7
        with:
          name: napture-v${{ github.sha }}.AppImage
          # Windows is still a WIP.
      - name: Download Windows Artifact
        uses: actions/download-artifact@v2
        with:
          name: NaptureInstaller.exe
      - name: Download Dependencies
        run: |
            sudo add-apt-repository universe
            sudo apt install libfuse2
      - name: Publish AppImage to Releases
        uses: softprops/action-gh-release@v2.0.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            napture-v${{ github.sha }}.AppImage
            NaptureInstaller.exe
          prerelease: true
          
      #    GITHUB_CONTINUOUS_RELEASE_NAME: "Automatic Build (${{ github.sha }})"
      #    GITHUB_CONTINUOUS_RELEASE_TAG: "workflow-build-${{ github.sha }}"
       # run: | OLD VERISON
       #     wget -q https://github.com/TheAssassin/pyuploadtool/releases/download/continuous/pyuploadtool-x86_64.AppImage
      #      chmod +x pyuploadtool-x86_64.AppImage
      #     ./pyuploadtool-x86_64.AppImage napture-v${{ github.sha }}.AppImage*
